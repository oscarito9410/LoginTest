[versions]
kotlin = "1.9.23"
gradle = "8.1.4"
ktLint = "11.6.0"
detekt = "1.19.0"
gradleVersionUpdate = "0.50.0"

# Kotlin Multiplatform Version
kotlinxCoroutines = "1.7.3"
koinCore = "3.5.3"
koinCompose = "1.1.2"
koinAndroid = "3.5.3"
koinAndroidxCompose = "3.5.3"
kotlinxSerializationJson = "1.6.2"
kotlinxDateTime = "0.5.0"
napier = "2.6.1"
ktor = "2.3.7"
multiplatformSettings = "1.1.1"
kmpNativeCoroutines = "0.12.1-new-mm"
buildKonfig = "0.13.3"
preCompose = "1.5.10"
imageLoader = "1.7.1"
materialWindowSizeClass = "0.3.0"

#Android Versions
androidxActivity = "1.9.0"


androidxCore = "1.13.0"
material = "1.11.0"
coroutines = "1.5.2"
leakCanary = "2.12"

jUnit = "4.13.2"
truth = "1.1.3"
mockk = "1.13.8"
mockMP = "1.17.0"
robolectric = "4.11.1"
jUnitKtx = "1.1.5"
espresso = "3.5.1"
test = "1.5.2"
archTestCore = "2.2.0"
turbine = "0.12.3"
composeMultiplatform = "1.6.1"

[plugins]
ktLint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktLint" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
gradleVersionUpdates = { id = "com.github.ben-manes.versions", version.ref = "gradleVersionUpdate" }
#kotlinX-testResources = { id = "com.goncalossilva.resources", version.ref = "kotlinxTestResources" }
multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
nativeCocoapod = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
android-kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
android-library = { id = "com.android.library", version.ref = "gradle" }
android-application = { id = "com.android.application", version.ref = "gradle" }
jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinX-serialization-plugin = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kmp-NativeCoroutines-plugin = { id = "com.rickclephas.kmp.nativecoroutines", version.ref = "kmpNativeCoroutines" }
buildKonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildKonfig" }
compose = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
ksp = { id ="com.google.devtools.ksp", version = "1.9.22-1.0.17" }

[libraries]
#Kotlin Multiplatform Lib Dependencies
kotlinX-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koinCore" }
kotlinX-serializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
kotlinX-dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime" }
multiplatformSettings-noArg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettings" }
multiplatformSettings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }
imageLoader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "imageLoader" }
preCompose = { module = "moe.tlaster:precompose", version.ref = "preCompose" }
preCompose-viewmodel = { module = "moe.tlaster:precompose-viewmodel", version.ref = "preCompose" }

#Android Lib Dependencies
androidX-core = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }
androidX-activity = { module = "androidx.activity:activity-compose", version.ref = "androidxActivity" }
material = { module = "com.google.android.material:material", version.ref = "material" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinAndroid" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinAndroidxCompose" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinCompose" }
leakCanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakCanary" }

#Tests Lib Dependencies
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

# kotlinX-testResources = { module = "com.goncalossilva:resources", version.ref = "kotlinxTestResources" }
kotlinX-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }

jUnit = { module = "junit:junit" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
googleTruth = { module = "com.google.truth:truth", version.ref = "truth" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
jUnitKtx = { module = "androidx.test.ext:junit-ktx", version.ref = "jUnitKtx" }
espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
test-core = { module = "androidx.test:core-ktx", version.ref = "test" }
archTestCore = { module = "androidx.arch.core:core-testing", version.ref = "archTestCore" }
test-rules = { module = "androidx.test:rules", version.ref = "test" }
test-runner = { module = "androidx.test:runner", version.ref = "test" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }